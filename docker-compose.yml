version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: kdp_contracts
      POSTGRES_USER: kdp_user
      POSTGRES_PASSWORD: kdp_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kdp_user -d kdp_contracts"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://kdp_user:kdp_password@postgres:5432/kdp_contracts
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./credentials.json:/app/credentials.json
    restart: unless-stopped

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: celery -A tasks worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://kdp_user:kdp_password@postgres:5432/kdp_contracts
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./credentials.json:/app/credentials.json
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: celery -A tasks beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://kdp_user:kdp_password@postgres:5432/kdp_contracts
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./credentials.json:/app/credentials.json
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: